hash                                             --Commit id
$ git checkout <name of branch or commit>        --Navigates between branches and commits.
"""The git checkout command lets you navigate between the branches created by git branch .
Checking out a branch updates the files in the working directory to match the version stored in that branch, and it tells Git to record all new commits on that branch."""

$ git checkout HEAD^                             --Moving HEAD one commit upwards
$ git branch                                     --List, create or delete branch
$ git git ls-files                               --List of files in local work directory
$ git ls-remote                                  --List of remote branches as well as more information.
$ git remote -v                                  --List your existing remotes in order to get the name of the remote you want to change.
$ git merge                                      --Adding branch commits to the other branch
"""If you want to merge project-a into project-b:"""
cd path/to/project-b
git remote add project-a path/to/project-a
git fetch project-a --tags
git merge --allow-unrelated-histories project-a/master # or whichever branch you want to merge
git remote remove project-a

$ git status--
$ git log   --Show commit logs
"""The command takes options applicable to the git rev-list command to control what is shown and how, and options applicable to the git diff-* commands to control how the changes each commit introduces are shown."""

  ADDING CHANGES TO REPO
$ git add.
$ git add -A
          --all
$ git commit
$ git push                                       --Save local commits in remote repository
$ git push --set-upstream origin <name>          --To push the current branch and set the remote as upstream
                                    --Creating coppy of changed file.


  DELETING:
$ git push <remote_name> --delete <branch_name>  --Deleting remote branch
$ git rm -r -f <file name>                       --Removing file from workin directory
$ git rm --cached <file name>                    --Untracking file from working repo
$ git branch -d <branch name>                    --Removes local branch
$ git fetch -p                                   --Deletes local branches to match remote branches.
$ git remote prune origin                        --Deletes local branches to match remote branches.
  """After someone deletes a branch from a remote repository,
git will not automatically delete the local repository branches when
a user does a git pull or git fetch. However,
if the user would like to have all tracking branches removed
from their local repository that have been deleted in a remote repository,
they can type: git remote prune origin"""
  PROCEDURE FOR REMOVING FILE FROM WD:
1)$ git rm -r -f <file name>                     --Removing file from workin directory
2)$ git commit                                   --Creating coppy of changed file/branch
3)$ git push                                     --Save local commits in remote repository



git branch -f master HEAD~3                      --Moving branch 3 coomints up
git branch -f master <commit>                    --Moving branch on speciied commit

git revert <commit ref>                          --Is used to revert in remote repository
git reset  <commit ref>                          --Is used to reset changes in local repository

git cherry-pick <Commit1> <Commit2> <...>        --This method of combining work is gluing chosen commits together.
git rebase -i HEAD~<number of commits to work on>--This command o


git rebase -i master~<Numbers of commits>
git commit --amend
git rebase -i master~<Numbers of commits>

